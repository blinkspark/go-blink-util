package main

import (
	"bytes"
	"encoding/base64"
	"errors"
	"flag"
	"fmt"
	"github.com/PuerkitoBio/goquery"
	util "github.com/blinkspark/go-blink-util"
	"io"
	"io/ioutil"
	"log"
	"net/http"
	"os"
	"path"
	"path/filepath"
	"regexp"
	"sync"
	"time"
)

var (
	url      string
	outPath  string
	retry    int
	override bool
	cleanup  bool
)

var badImg = ""

func initFlag() {
	flag.StringVar(&url, "t", "", "-t target_url")
	flag.StringVar(&outPath, "o", "", "-o /path/to/target")
	flag.IntVar(&retry, "re", 10, "-re N (retry times)")
	flag.BoolVar(&override, "override", false, "-override (override folder)")
	flag.BoolVar(&cleanup, "cleanup", false, "-cleanup (clean up folders which contains bag img)")
	flag.Parse()
}

func main() {
	initFlag()

	if cleanup {
		cleanUp()
		return
	}

	doc, err := newDoc(url, retry)
	if err != nil {
		util.CheckErr(err)
	}

	handlePage(doc)
}

func handleGDoc(doc *goquery.Document) {
	href, _ := doc.Find(".gdtm").First().Find("a").Attr("href")
	gn := doc.Find("#gn").Text()
	reg := regexp.MustCompile(`[ /\\:*?;'"<>|@#$]+`)
	gn = reg.ReplaceAllString(gn, "_")

	download(href, path.Join(outPath, gn))
}

func handlePage(doc *goquery.Document) {
	doc.Find(".glname").Find("a").Each(func(i int, selection *goquery.Selection) {
		ghref, _ := selection.Attr("href")
		gDoc, err := newDoc(ghref, retry)
		if err != nil {
			log.Println(err)
			return
		}

		handleGDoc(gDoc)
	})

	// next page
	nextDoc, err := findNextPage(doc)
	if err != nil {
		log.Println(err)
		return
	}
	handlePage(nextDoc)
}

func findNextPage(doc *goquery.Document) (*goquery.Document, error) {
	lastPL := doc.Find(".ptb").Find("a").Last()
	if lastPL.Text() != ">" {
		return nil, errors.New("this is last page")
	}

	href, _ := lastPL.Attr("href")
	nextDoc, err := newDoc(href, retry)
	if err != nil {
		return nil, err
	}
	return nextDoc, nil
}

func newDoc(url string, retry int) (*goquery.Document, error) {
	for i := 0; i < retry; i++ {
		resp, err := http.Get(url)
		if err != nil {
			log.Println(err, "retry!")
			continue
		}

		if resp.StatusCode != http.StatusOK {
			log.Println("Getting " + url + "failed, retry!")
			continue
		}

		return goquery.NewDocumentFromReader(resp.Body)
	}
	return nil, errors.New("max retry reached")
}

func download(url string, oPath string) {
	if oPath != "" {
		if util.Exists(oPath) && !override {
			return
		}
		log.Println("oPath:", oPath)
		err := os.MkdirAll(oPath, os.ModeDir)
		if err != nil {
			log.Fatalln(err)
		}
	}

	i := 1
	curRetry := 0
	var nextUrl = ""
	var curUrl = url
	for {
		if curRetry >= retry {
			curRetry = -1
		}
		doc, err := newDoc(curUrl, retry)
		if err != nil {
			log.Println(err)
			curRetry++
			continue
		}

		log.Println("downloading:", curUrl)

		imgNode := doc.Find("#img")

		nextUrl, _ = imgNode.Parent().Attr("href")
		if nextUrl == curUrl {
			log.Println("Done")
			break
		}

		if curRetry < 0 {
			curUrl = nextUrl
			i++
			curRetry = 0
			continue
		}

		imgUrl, _ := imgNode.Attr("src")
		imgResp, err := http.Get(imgUrl)
		if err != nil {
			log.Println(err)
			curRetry++
			continue
		}

		if imgResp.StatusCode != http.StatusOK {
			log.Println(imgResp.Status, "retry!")
			curRetry++
			continue
		}

		//fName := getFName(doc)
		out := path.Join(oPath, fmt.Sprintf("%04d.jpg", i))
		log.Println(out)
		imgData, err := ioutil.ReadAll(imgResp.Body)
		if err != nil {
			log.Println(err)
			curRetry++
			continue
		}
		badImgData, err := base64.RawStdEncoding.DecodeString(badImg)
		if err != nil {
			log.Println(err)
			curRetry++
			continue
		}

		if bytes.Equal(imgData, badImgData) {
			log.Fatalln("exceed max download limit!")
		}

		err = ioutil.WriteFile(out, imgData, 0666)
		if err != nil {
			log.Println(err)
			curRetry++
			continue
		}

		curUrl = nextUrl
		i++
		curRetry = 0
	}
}

func cleanUp() {
	pathPool := make(chan string, 1)
	var wg sync.WaitGroup
	go func() {
		wg.Add(1)
		_ = filepath.Walk(outPath, func(path string, info os.FileInfo, err error) error {
			if err != nil {
				return nil
			}
			if info.IsDir() && outPath != path {
				pathPool <- path
			}
			return nil
		})
		close(pathPool)
		wg.Done()
	}()

	for i := 0; i < 12; i++ {
		go func() {
			wg.Add(1)

			for p := range pathPool {
				log.Println("searching: ", p)
				_ = filepath.Walk(p, func(path string, info os.FileInfo, err error) error {
					if info.IsDir() || err != nil {
						return nil
					}

					fData, err := ioutil.ReadFile(path)
					if err != nil {
						log.Println(err)
						return nil
					}
					badImgData, err := base64.RawStdEncoding.DecodeString(badImg)
					if err != nil {
						log.Println(err)
						return nil
					}
					if bytes.Equal(badImgData, fData) {
						log.Println("deleting: ", p)
						_ = os.RemoveAll(p)
						return io.EOF
					}

					return nil
				})
			}

			wg.Done()
		}()
	}

	time.Sleep(time.Second)
	wg.Wait()
}

// TODO bug always get same name
//func getFName(doc *goquery.Document) string {
//	info := doc.Find("#i2").Last().Text()
//	log.Println(info)
//	return strings.Split(info, " ")[0]
//}
